# MYSQL数据库连接池配置
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/forum
spring.datasource.username=root
spring.datasource.password=root
# 最大并发连接数
spring.datasource.max-active=100
# 最大逐出时间
spring.datasource.max-idle=8
# 最小逐出时间
spring.datasource.min-idle=8
# 连接池初始化大小
spring.datasource.initial-size=10
spring.datasource.validation-query=SELECT 'x' from dual
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
spring.datasource.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.min-evictable-idle-time-millis=300000
# 配置获取连接等待超时的时间
spring.datasource.max-wait-millis=60000
# 连接失败重试次数
spring.datasource.retryAttempts=10
# 当连接池连接耗尽时获取连接数
spring.datasource.acquireIncrement=5
spring.datasource.poolPreparedStatements=false
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat

spring.jpa.database = MYSQL
spring.jpa.show-sql = true


# 服务器端口
server.port=90

# Email Address
# Default MimeMessage encoding.
spring.mail.default-encoding=UTF-8
# SMTP server host. For instance `smtp.example.com`
spring.mail.host=
# Session JNDI name. When set, takes precedence to others mail settings.
spring.mail.jndi-name=
# Login password of the SMTP server.
spring.mail.password=
# SMTP server port.
spring.mail.port=
# Additional JavaMail session properties.
spring.mail.properties.*=
# Protocol used by the SMTP server
spring.mail.protocol=smtp
# Test that the mail server is available on startup.
spring.mail.test-connection=false
# Login user of the SMTP server.
spring.mail.username=

info.build.artifactId=@project.artifactId@
info.build.version=@project.version@
# LOGGING
logging.file=isy.log
logging.path=logs

# freemarker
spring.freemarker.allow-request-override=false
spring.freemarker.allow-session-override=false
spring.freemarker.cache=true
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=false
spring.freemarker.content-type=text/html
spring.freemarker.enabled=true
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.prefer-file-system-access=true
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath*:/templates/
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true
spring.freemarker.order=1

#thymeleaf start
# THYMELEAF (ThymeleafAutoConfiguration)
#开启模板缓存（默认值：true）
spring.thymeleaf.cache=false
#Check that the template exists before rendering it.
spring.thymeleaf.check-template=true
#检查模板位置是否正确（默认值:true）
spring.thymeleaf.check-template-location=true
#Content-Type的值（默认值：text/html）
spring.thymeleaf.content-type=text/html
#开启MVC Thymeleaf视图解析（默认值：true）
spring.thymeleaf.enabled=true
#模板编码
spring.thymeleaf.encoding=UTF-8
#要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
spring.thymeleaf.mode=HTML5
#在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath*:/templates/
#在构建URL时添加到视图名称后的后缀（默认值：.html）
spring.thymeleaf.suffix=.html
#Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
spring.thymeleaf.template-resolver-order=
#可解析的视图名称列表，用逗号分隔
spring.thymeleaf.view-names=
#要被排除在解析之外的视图名称列表，用逗号分隔
spring.thymeleaf.excluded-view-names=
#thymeleaf end

# INTERNATIONALIZATION (MessageSourceAutoConfiguration)
spring.messages.basename=messages
spring.messages.cacheSeconds=-1
spring.messages.encoding=UTF-8

# velocity
spring.velocity.resourceLoaderPath=classpath*:/templates/
spring.velocity.prefix=
spring.velocity.suffix=.vm
spring.velocity.cache=false
spring.velocity.check-template-location=false
spring.velocity.charset=UTF-8
spring.velocity.content-type=text/html

spring.mvc.view.suffix=.html
spring.mvc.view.prefix=classpath*:/templates/